import { ApiModule, Core } from '@moralisweb3/common-core';
import { GetBalanceRequest, GetBalanceResponseAdapter, GetNFTsRequest, GetNFTsResponseAdapter, GetPortfolioRequest, GetPortfolioResponseAdapter, GetSPLRequest, GetSPLResponseAdapter, GetNFTMetadataRequest, GetNFTMetadataResponseAdapter, GetTokenPriceRequest, GetTokenPriceResponseAdapter } from '@moralisweb3/common-sol-utils';

declare abstract class ClientSolApi extends ApiModule {
    readonly account: {
        getBalance: (request: GetBalanceRequest) => Promise<GetBalanceResponseAdapter>;
        getNFTs: (request: GetNFTsRequest) => Promise<GetNFTsResponseAdapter>;
        getPortfolio: (request: GetPortfolioRequest) => Promise<GetPortfolioResponseAdapter>;
        getSPL: (request: GetSPLRequest) => Promise<GetSPLResponseAdapter>;
    };
    readonly nft: {
        getNFTMetadata: (request: GetNFTMetadataRequest) => Promise<GetNFTMetadataResponseAdapter>;
    };
    readonly token: {
        getTokenPrice: (request: GetTokenPriceRequest) => Promise<GetTokenPriceResponseAdapter>;
    };
}

declare class SolApi extends ClientSolApi {
    static readonly moduleName = "solApi";
    static create(core?: Core): SolApi;
    private constructor();
    setup(): void;
    start(): void;
}

declare const _default: {
    SolApi: typeof SolApi;
};
//# sourceMappingURL=index.d.ts.map

export { SolApi, _default as default };
